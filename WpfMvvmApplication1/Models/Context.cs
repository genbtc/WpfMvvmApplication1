//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("agsModel", "cityfk", "CITIES", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WpfMvvmApplication1.Models.CITIES), "FAMILIES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WpfMvvmApplication1.Models.FAMILIES), true)]
[assembly: EdmRelationshipAttribute("agsModel", "famfk", "FAMILIES", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WpfMvvmApplication1.Models.FAMILIES), "CHILDRENS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WpfMvvmApplication1.Models.CHILDRENS), true)]
[assembly: EdmRelationshipAttribute("agsModel", "familyfk", "FAMILIES", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WpfMvvmApplication1.Models.FAMILIES), "FAMILYQUOTIENTS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WpfMvvmApplication1.Models.FAMILYQUOTIENTS), true)]

#endregion

namespace WpfMvvmApplication1.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class agsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new agsEntities object using the connection string found in the 'agsEntities' section of the application configuration file.
        /// </summary>
        public agsEntities() : base("name=agsEntities", "agsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new agsEntities object.
        /// </summary>
        public agsEntities(string connectionString) : base(connectionString, "agsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new agsEntities object.
        /// </summary>
        public agsEntities(EntityConnection connection) : base(connection, "agsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CHILDRENS> CHILDRENS
        {
            get
            {
                if ((_CHILDRENS == null))
                {
                    _CHILDRENS = base.CreateObjectSet<CHILDRENS>("CHILDRENS");
                }
                return _CHILDRENS;
            }
        }
        private ObjectSet<CHILDRENS> _CHILDRENS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CITIES> CITIES
        {
            get
            {
                if ((_CITIES == null))
                {
                    _CITIES = base.CreateObjectSet<CITIES>("CITIES");
                }
                return _CITIES;
            }
        }
        private ObjectSet<CITIES> _CITIES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CIVILITIES> CIVILITIES
        {
            get
            {
                if ((_CIVILITIES == null))
                {
                    _CIVILITIES = base.CreateObjectSet<CIVILITIES>("CIVILITIES");
                }
                return _CIVILITIES;
            }
        }
        private ObjectSet<CIVILITIES> _CIVILITIES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FAMILIES> FAMILIES
        {
            get
            {
                if ((_FAMILIES == null))
                {
                    _FAMILIES = base.CreateObjectSet<FAMILIES>("FAMILIES");
                }
                return _FAMILIES;
            }
        }
        private ObjectSet<FAMILIES> _FAMILIES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FAMILYQUOTIENTS> FAMILYQUOTIENTS
        {
            get
            {
                if ((_FAMILYQUOTIENTS == null))
                {
                    _FAMILYQUOTIENTS = base.CreateObjectSet<FAMILYQUOTIENTS>("FAMILYQUOTIENTS");
                }
                return _FAMILYQUOTIENTS;
            }
        }
        private ObjectSet<FAMILYQUOTIENTS> _FAMILYQUOTIENTS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MEDECINS> MEDECINS
        {
            get
            {
                if ((_MEDECINS == null))
                {
                    _MEDECINS = base.CreateObjectSet<MEDECINS>("MEDECINS");
                }
                return _MEDECINS;
            }
        }
        private ObjectSet<MEDECINS> _MEDECINS;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CHILDRENS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCHILDRENS(CHILDRENS cHILDRENS)
        {
            base.AddObject("CHILDRENS", cHILDRENS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CITIES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCITIES(CITIES cITIES)
        {
            base.AddObject("CITIES", cITIES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CIVILITIES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCIVILITIES(CIVILITIES cIVILITIES)
        {
            base.AddObject("CIVILITIES", cIVILITIES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FAMILIES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFAMILIES(FAMILIES fAMILIES)
        {
            base.AddObject("FAMILIES", fAMILIES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FAMILYQUOTIENTS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFAMILYQUOTIENTS(FAMILYQUOTIENTS fAMILYQUOTIENTS)
        {
            base.AddObject("FAMILYQUOTIENTS", fAMILYQUOTIENTS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MEDECINS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMEDECINS(MEDECINS mEDECINS)
        {
            base.AddObject("MEDECINS", mEDECINS);
        }

        #endregion

    }

    #endregion

}
